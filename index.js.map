{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_key = '51387635-d1faa43170eec50f2b7d86b54';\n\nconst base_url = `https://pixabay.com/api/`;\n\nexport function getImagesByQuery(query) {\n  const params = {\n    key: API_key,\n    q: query,\n    image_type: `photo`,\n    orientation: `horizontal`,\n    safesearch: true,\n  };\n\n  function delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  return delay(2000).then(() => {\n    return axios\n      .get(base_url, { params })\n\n      .then(response => {\n        const data = response.data;\n        if (!data.hits || data.hits.length === 0) {\n          throw new Error('No images found');\n        }\n        return data;\n      })\n      .catch(error => {\n        throw error;\n      });\n  });\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst galleryContainer = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nexport function createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `\n        <li class=\"photo-card\">\n          <a href=\"${largeImageURL}\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" />\n          </a>\n          <div class=\"info\">\n            <p><b>Likes:</b> ${likes}</p>\n            <p><b>Views:</b> ${views}</p>\n            <p><b>Comments:</b> ${comments}</p>\n            <p><b>Downloads:</b> ${downloads}</p>\n          </div>\n        </li>\n      `\n    )\n    .join('');\n}\n\nexport function renderEmptyMessage(message = 'No images found.') {\n  galleryContainer.innerHTML = `\n    <li style=\"grid-column: 1 / -1; text-align: center; font-size: 18px; color: #666;\">\n      ${message}\n    </li>\n  `;\n}\n\nexport function createGallery(arr) {\n  const markup = createMarkup(arr);\n  galleryContainer.insertAdjacentHTML('beforeend', markup);\n  lightbox.refresh();\n}\n\nexport function showLoader() {\n  loader.classList.add('is-visible');\n}\n\nexport function hideLoader() {\n  loader.classList.remove('is-visible');\n}\n\nexport function clearGallery() {\n  galleryContainer.innerHTML = '';\n}\n","import { getImagesByQuery } from './js/pixabay-api.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport {\n  clearGallery,\n  showLoader,\n  hideLoader,\n  createGallery,\n} from './js/render-functions.js';\n\nconst form = document.querySelector('.form');\nconst gallery = document.querySelector('.gallery');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const searchInput = form.querySelector('input[name=\"search-text\"]');\n  const query = searchInput.value.trim();\n\n  if (!query) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please enter a search term!',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  clearGallery();\n  showLoader();\n\n  getImagesByQuery(query)\n    .then(data => {\n      if (data && data.hits && data.hits.length > 0) {\n        createGallery(data.hits);\n      } else {\n        iziToast.warning({\n          title: 'Warning',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'topRight',\n        });\n      }\n    })\n    .catch(error => {\n      iziToast.error({\n        title: 'Error',\n        message: 'There was an error loading the images. Please try again.',\n        position: 'topRight',\n      });\n    })\n    .finally(() => {\n      hideLoader();\n      searchInput.value = '';\n    });\n});\n"],"names":["API_key","base_url","getImagesByQuery","query","params","delay","ms","resolve","axios","response","data","error","galleryContainer","loader","lightbox","SimpleLightbox","createMarkup","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","createGallery","markup","showLoader","hideLoader","clearGallery","form","event","searchInput","iziToast"],"mappings":"owBAEA,MAAMA,EAAU,qCAEVC,EAAW,2BAEV,SAASC,EAAiBC,EAAO,CACtC,MAAMC,EAAS,CACb,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,EAEE,SAASE,EAAMC,EAAI,CACjB,OAAO,IAAI,QAAQC,GAAW,WAAWA,EAASD,CAAE,CAAC,CACtD,CACD,OAAOD,EAAM,GAAI,EAAE,KAAK,IACfG,EACJ,IAAIP,EAAU,CAAE,OAAAG,EAAQ,EAExB,KAAKK,GAAY,CAChB,MAAMC,EAAOD,EAAS,KACtB,GAAI,CAACC,EAAK,MAAQA,EAAK,KAAK,SAAW,EACrC,MAAM,IAAI,MAAM,iBAAiB,EAEnC,OAAOA,CACf,CAAO,EACA,MAAMC,GAAS,CACd,MAAMA,CACd,CAAO,CACJ,CACH,CC9BA,MAAMC,EAAmB,SAAS,cAAc,UAAU,EACpDC,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAEM,SAASC,EAAaC,EAAK,CAChC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA;AAAA,qBAESL,CAAa;AAAA,wBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,+BAGnBC,CAAK;AAAA,+BACLC,CAAK;AAAA,kCACFC,CAAQ;AAAA,mCACPC,CAAS;AAAA;AAAA;AAAA,OAIvC,EACA,KAAK,EAAE,CACZ,CAUO,SAASC,EAAcR,EAAK,CACjC,MAAMS,EAASV,EAAaC,CAAG,EAC/BL,EAAiB,mBAAmB,YAAac,CAAM,EACvDZ,EAAS,QAAO,CAClB,CAEO,SAASa,GAAa,CAC3Bd,EAAO,UAAU,IAAI,YAAY,CACnC,CAEO,SAASe,GAAa,CAC3Bf,EAAO,UAAU,OAAO,YAAY,CACtC,CAEO,SAASgB,GAAe,CAC7BjB,EAAiB,UAAY,EAC/B,CCpDA,MAAMkB,EAAO,SAAS,cAAc,OAAO,EAC3B,SAAS,cAAc,UAAU,EACjDA,EAAK,iBAAiB,SAAUC,GAAS,CACvCA,EAAM,eAAc,EACpB,MAAMC,EAAcF,EAAK,cAAc,2BAA2B,EAC5D3B,EAAQ6B,EAAY,MAAM,KAAI,EAEpC,GAAI,CAAC7B,EAAO,CACV8B,EAAS,MAAM,CACb,MAAO,QACP,QAAS,8BACT,SAAU,UAChB,CAAK,EACD,MACD,CAEDJ,IACAF,IAEAzB,EAAiBC,CAAK,EACnB,KAAKO,GAAQ,CACRA,GAAQA,EAAK,MAAQA,EAAK,KAAK,OAAS,EAC1Ce,EAAcf,EAAK,IAAI,EAEvBuB,EAAS,QAAQ,CACf,MAAO,UACP,QACE,2EACF,SAAU,UACpB,CAAS,CAET,CAAK,EACA,MAAMtB,GAAS,CACdsB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,2DACT,SAAU,UAClB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbL,IACAI,EAAY,MAAQ,EAC1B,CAAK,CACL,CAAC"}